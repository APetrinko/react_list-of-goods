{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","setSort","setState","setReverse","setReset","this","visibleGoods","goods","ALPHABET","sort","currentGood","nextGood","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","shouldRenderResetButton","className","type","clasNames","onClick","map","name","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkDE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,SAACF,GACT,EAAKG,SAAS,CAAEH,cAPpB,EAUEI,WAAa,WACX,EAAKD,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBAZzB,EAgBEM,SAAW,WACT,EAAKF,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAnBzB,4CAuBE,WAAU,IAAD,OACP,EAAiCK,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdO,EAhEH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENQ,EAAY,YAAOC,GAEzB,OAAQR,GACN,KAAKL,EAASc,SACZF,EAAaG,MAAK,SAACC,EAAaC,GAAd,OAChBD,EAAYE,cAAcD,MAE5B,MAEF,KAAKjB,EAASmB,OACZP,EAAaG,MAAK,SAACC,EAAaC,GAAd,OAChBD,EAAYI,OAASH,EAASG,UAIlC,KAAKpB,EAASM,MAYhB,OAPIF,GACFQ,EAAaS,UAIfC,QAAQC,IAAIlB,EAAUD,GAEfQ,EAiCgBY,CAAkBvB,EAAiBU,KAAKR,OACvDsB,EAA0BpB,IAAaL,EAASM,MAAQF,EAE9D,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYvB,IAAaL,EAASc,WAEtCe,QAAS,kBAAM,EAAKtB,QAAQP,EAASc,WANvC,iCAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYvB,IAAaL,EAASmB,SAEtCU,QAAS,kBAAM,EAAKtB,QAAQP,EAASmB,SANvC,4BAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAaxB,IAEjByB,QAASlB,KAAKF,WANhB,qBAWCgB,GACC,wBACEE,KAAK,SACLD,UAAU,mBACVG,QAAS,kBAAM,EAAKnB,YAHtB,sBAUJ,6BACGE,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eA7ErB,GAAyBC,aCjEzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.33ff4108.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport clasNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((currentGood, nextGood) => (\n        currentGood.localeCompare(nextGood)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((currentGood, nextGood) => (\n        currentGood.length - nextGood.length\n      ));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  setSort = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  setReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  setReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n    const shouldRenderResetButton = sortType !== SortType.NONE || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={clasNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.setSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={clasNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.setSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={clasNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.setReverse}\n          >\n            Reverse\n          </button>\n\n          {shouldRenderResetButton && (\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={() => this.setReset()}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(name => (\n            <li key={name} data-cy=\"Good\">{name}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}