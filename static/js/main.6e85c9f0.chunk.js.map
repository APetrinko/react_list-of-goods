{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","currentGoods","nextGoods","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","sortBy","setState","reset","this","className","type","clasNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAoBzB,OAlBAG,EAAaC,MAAK,SAACC,EAAcC,GAC/B,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAaG,cAAcF,GACpC,KAAKT,EAASY,OACZ,OAAOJ,EAAaK,OAASJ,EAAUI,OACzC,QACE,OAAO,MAITR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAnCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAMiB,EAAb,4MACEC,MAAyB,CACvBb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,OAAS,SAAChB,GACR,EAAKiB,SAAS,CAAEjB,cAPpB,EAUEU,QAAU,WACR,EAAKO,UAAS,SAAAH,GAAK,MAAK,CACtBb,YAAaa,EAAMb,gBAZzB,EAgBEiB,MAAQ,WACN,EAAKD,SAAS,CACZhB,YAAY,EACZD,SAAUJ,EAASmB,QAnBzB,4CAuBE,WAAU,IAAD,OACP,EAAiCI,KAAKL,MAA9Bb,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SACdE,EAAeJ,EAAkBD,EAAiBsB,KAAKL,OAE7D,OACE,sBAAKM,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,IAAaJ,EAASU,WAEtCiB,QAAS,kBAAM,EAAKP,OAAOpB,EAASU,WANtC,iCAWA,wBACEe,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYtB,IAAaJ,EAASY,SAEtCe,QAAS,kBAAM,EAAKP,OAAOpB,EAASY,SANtC,4BAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAAS,kBAAM,EAAKb,WANtB,sBAWEV,IAAaJ,EAASmB,MAAQd,IAC9B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKL,SAHtB,sBAUJ,6BAEIpB,EAAkBI,EAAc,CAAEF,WAAUC,eACzCuB,KAAI,SAACC,GACJ,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eA/E3B,GAAyBC,aC1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6e85c9f0.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport clasNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((currentGoods, nextGoods) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return currentGoods.localeCompare(nextGoods);\n      case SortType.LENGTH:\n        return currentGoods.length - nextGoods.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortBy = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={clasNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.sortBy(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={clasNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.sortBy(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={clasNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => this.reverse()}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.reset()}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {\n            getReorderedGoods(visibleGoods, { sortType, isReversed })\n              .map((good) => {\n                return (\n                  <li key={good} data-cy=\"Good\">\n                    {good}\n                  </li>\n                );\n              })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}