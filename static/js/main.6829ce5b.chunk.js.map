{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","currentGood","nextGood","localeCompare","LENGTH","length","NONE","reverse","console","log","App","state","sortBy","setState","reset","this","className","type","clasNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAEzB,OAAQC,GACN,KAAKJ,EAASO,SACZD,EAAaE,MAAK,SAACC,EAAaC,GAAd,OAChBD,EAAYE,cAAcD,MAE5B,MAEF,KAAKV,EAASY,OACZN,EAAaE,MAAK,SAACC,EAAaC,GAAd,OAChBD,EAAYI,OAASH,EAASG,UAIlC,KAAKb,EAASc,MAYhB,OAPIT,GACFC,EAAaS,UAIfC,QAAQC,IAAIb,EAAUC,GAEfC,G,SA1CJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkDE,IAAMkB,EAAb,4MACEC,MAAyB,CACvBd,YAAY,EACZD,SAAUJ,EAASc,MAHvB,EAMEM,OAAS,SAAChB,GACR,EAAKiB,SAAS,CAAEjB,cAPpB,EAUEW,QAAU,WACR,EAAKM,UAAS,SAAAF,GAAK,MAAK,CACtBd,YAAac,EAAMd,gBAZzB,EAgBEiB,MAAQ,WACN,EAAKD,SAAS,CACZhB,YAAY,EACZD,SAAUJ,EAASc,QAnBzB,4CAuBE,WAAU,IAAD,OACP,EAAiCS,KAAKJ,MAA9Bd,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SACdE,EAAeJ,EAAkBD,EAAiBsB,KAAKJ,OAE7D,OACE,sBAAKK,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYtB,IAAaJ,EAASO,WAEtCoB,QAAS,kBAAM,EAAKP,OAAOpB,EAASO,WANtC,iCAWA,wBACEkB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYtB,IAAaJ,EAASY,SAEtCe,QAAS,kBAAM,EAAKP,OAAOpB,EAASY,SANtC,4BAWA,wBACEa,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAarB,IAEjBsB,QAAS,kBAAM,EAAKZ,WANtB,sBAWEX,IAAaJ,EAASc,MAAQT,IAC9B,wBACEoB,KAAK,SACLD,UAAU,mBACVG,QAAS,kBAAM,EAAKL,SAHtB,sBAUJ,6BAEIpB,EAAkBI,EAAc,CAAEF,WAAUC,eACzCuB,KAAI,SAACC,GACJ,OACE,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eA/E3B,GAAyBC,aCjEzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6829ce5b.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport clasNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((currentGood, nextGood) => (\n        currentGood.localeCompare(nextGood)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((currentGood, nextGood) => (\n        currentGood.length - nextGood.length\n      ));\n      break;\n\n    case SortType.NONE:\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortBy = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={clasNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.sortBy(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={clasNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={() => this.sortBy(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={clasNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={() => this.reverse()}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={() => this.reset()}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {\n            getReorderedGoods(visibleGoods, { sortType, isReversed })\n              .map((good) => {\n                return (\n                  <li key={good} data-cy=\"Good\">\n                    {good}\n                  </li>\n                );\n              })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}